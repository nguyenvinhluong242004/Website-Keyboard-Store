<ul class="breadcrumb" style="margin: 7px; margin-left: 100px;">
    <li>
        <a href="/" style="text-decoration: none; color: blue;"><span>Trang chủ</span></a>
        <span class="mr_lr">&nbsp;/&nbsp;</span>
    </li>
    <li><strong><span>Giỏ hàng</span></strong></li>
</ul>
<div class="container mt-4">
    <div class="bg-success text-white text-center py-2 mb-2">
        <h4>Giỏ hàng (<span id="cart-count">0</span>)</h4>
    </div>
    <div id="cart-items-container"></div>

    <div class="d-flex justify-content-between align-items-center p-3 border">
        <div style="min-width: 100px;">
            <input type="checkbox" id="select-all" onclick="toggleSelectAll(this)">
            <label for="select-all">Tất Cả</label>
        </div>
        <div style="min-width: 400px;">
            <span class="total-payment">Tổng Tiền: <span id="total-price">0</span> đ</span>
        </div>
        <button class="btn btn-buy" onclick="placeOrder()">MUA NGAY</button>
    </div>
</div>

<div class="modal fade" id="notificationModal" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true"
    data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="notificationModalLabel">Thông báo</h5>
            </div>
            <div class="modal-body">
                <p id="notificationMessage">Nội dung thông báo sẽ hiển thị ở đây.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="closeNotificationBtn"
                    data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<script>
    let cartItemsMoveToPayment = [];

    // Hàm lấy dữ liệu giỏ hàng
    function loadCart() {
        $.ajax({
            url: '/shopping-cart/get',
            method: 'GET',
            success: function (response) {
                console.log(response.listCart)
                if (response.success) {
                    response.listCart.forEach(item => {
                        cartItemsMoveToPayment.push(item);
                    });
                    renderCartItems(response.listCart);
                } else {
                    console.error("Lỗi khi tải giỏ hàng:", response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
            }
        });
    }

    // Hàm cập nhật giỏ hàng
    function changeCountItem(productId, quantity) {
        $.ajax({
            url: '/shopping-cart/change',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                ProductID: productId,
                Quantity: quantity
            }),
            success: function (response) {
                if (response.success) {
                    const t = cartItemsMoveToPayment.length;
                    cartItemsMoveToPayment = [];
                    response.listCart.forEach(item => {
                        cartItemsMoveToPayment.push(item);
                    });
                    const tt = cartItemsMoveToPayment.length;

                    if (tt < t) {
                        $('#notificationMessage').text('Đã xóa sản phẩm'); // Cập nhật nội dung thông báo
                        $('#notificationModal').modal('show');   // Hiển thị modal
                    }
                    renderCartItems(response.listCart); // Cập nhật lại giỏ hàng
                } else {
                    $('#notificationMessage').text(response.message); // Cập nhật nội dung thông báo
                    $('#notificationModal').modal('show');   // Hiển thị modal
                    return false;
                }
            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
            }
        });
    }

    // Hàm hiển thị giỏ hàng
    function renderCartItems(cartItems) {
        const container = document.getElementById("cart-items-container");
        const cartCount = document.getElementById("cart-count");

        let totalQuantity = 0;

        container.innerHTML = ""; // Xóa các sản phẩm cũ

        cartItems.forEach(item => {
            totalQuantity += 1;

            let isUnavailable = item.quantity > item.total;
            if (!item.type) {
                isUnavailable = true;
                console.log(item.type)
            }
            let disabledDistract = false;
            let disabledAdd = false;
            if (item.quantity === 1) {
                disabledDistract = true;
            }
            if (item.quantity === item.total) {
                disabledAdd = true;
            }

            let slug = '';

            if (item.categoryid === 1) slug = 'keCap';
            else if (item.categoryid === 2) slug = 'kitPhim';
            if (item.categoryid === 3) slug = 'accessories';
            else if (item.categoryid === 4) slug = 'switch';

            const cartItemHTML = `
                <div class="cart-item border p-3 d-flex align-items-start mb-2 ${isUnavailable ? 'text-decoration-line-through' : ''}">
                    <input type="checkbox" class="select-item" data-product-id="${item.productid}" 
                        data-price="${item.currentprice}" data-quantity="${item.quantity}" onclick="updateTotalPrice()"
                        style="margin: auto; margin-right: 7px;" ${isUnavailable ? 'disabled' : ''}>
                    <img onclick="getItem(${item.productid}, ${item.type})" src="${item.firstImage}" style="cursor: pointer; width: 100px; aspect-ratio: 1 / 1; object-fit: cover;" alt="Product" class="me-3">
                    <div class="w-100">
                        <h6>${item.type === 1 ? '[Instock] ' : item.type === 2 ? '[GroupBy] ' : item.quantity === 0 ? '[Hết hàng] ' : '[Đã xóa] '}${item.productname}</h6>
                        <div class="d-flex">
                            <p class="text-danger fw-bold" style="margin-right: 10px;">
                                <s style="color: black;">${item.oldprice}</s>
                            </p>
                            <p class="text-danger fw-bold">${item.currentprice}</p>
                        </div>
                        <div class="d-flex align-items-center">
                            <button onclick="changeCountItem('${item.productid}', ${item.quantity - 1})" 
                                type="button" class="quantity-btn" ${isUnavailable ? 'disabled' : ''} ${disabledDistract ? 'disabled' : ''}>-</button>
                            <input type="text" value="${item.quantity}" class="mx-2 quantity-input"
                                style="display: block; width: 6ch; text-align: center; border: none;"
                                data-original-quantity="${item.quantity}"
                                onblur="handleQuantityChange(this, '${item.productid}')"
                                onkeydown="if(event.key === 'Enter') handleQuantityChange(this, '${item.productid}')" ${isUnavailable ? 'disabled' : ''}>
                            <button onclick="changeCountItem('${item.productid}', ${item.quantity + 1})" 
                                type="button" class="quantity-btn" ${isUnavailable ? 'disabled' : ''} ${disabledAdd ? 'disabled' : ''}>+</button>
                            <div class="ms-auto d-flex">
                                <a href="/${slug}" class="similar-btn px-3 py-1 me-2" style="cursor: pointer; text-decoration: none;">Sản phẩm tương tự</a>
                                <div onclick="changeCountItem('${item.productid}', 0)" 
                                    class="delete-btn px-3 py-1" style="cursor: pointer;">Xóa</div>
                            </div>
                        </div>
                    </div>
                </div>
            `;

            container.innerHTML += cartItemHTML;
        });

        // Cập nhật tổng số lượng sản phẩm
        cartCount.textContent = totalQuantity;

        // Khởi động lại tổng tiền
        updateTotalPrice();
    }

    // Hàm tính tổng tiền
    function updateTotalPrice() {
        const checkboxes = document.querySelectorAll(".select-item:checked");
        let totalPrice = 0;

        checkboxes.forEach(checkbox => {
            const price = parseFloat(checkbox.getAttribute("data-price"));
            const quantity = parseInt(checkbox.getAttribute("data-quantity"));
            totalPrice += price * quantity;
        });

        document.getElementById("total-price").textContent = totalPrice.toLocaleString();
    }

    function toggleSelectAll(selectAllCheckbox) {
        const checkboxes = document.querySelectorAll(".select-item:not(:disabled)");
        checkboxes.forEach(checkbox => {
            checkbox.checked = selectAllCheckbox.checked;
        });

        // Tính lại tổng tiền khi chọn tất cả hoặc bỏ chọn tất cả
        updateTotalPrice();
    }


    function placeOrder() {
        const checkboxes = document.querySelectorAll(".select-item:checked");

        const cartItemCheck = []

        checkboxes.forEach(checkbox => {
            const productId = checkbox.getAttribute("data-product-id");
            const item = cartItemsMoveToPayment.find(item => parseFloat(item.productid) === parseFloat(productId));
            if (item) {
                cartItemCheck.push(item);
            }
        });

        if (cartItemCheck.length === 0) {
            $('#notificationMessage').text('Vui lòng chọn sản phẩm cần mua'); // Cập nhật nội dung thông báo
            $('#notificationModal').modal('show');   // Hiển thị modal
            return;
        }
        // Redirect to the payment page with cart items
        const cartItems = JSON.stringify(cartItemCheck);
        console.log(cartItems);
        console.log(cartItemCheck);

        window.location.href = `/payment?cartItems=${encodeURIComponent(cartItems)}`;
    }

    // Hàm xử lý cập nhật số lượng khi người dùng nhấn Enter hoặc bấm ra ngoài
    function handleQuantityChange(inputElement, productId) {
        const originalQuantity = parseInt(inputElement.getAttribute("data-original-quantity"));
        const newQuantity = parseInt(inputElement.value);
        let sta = true;

        if (newQuantity !== originalQuantity && !isNaN(newQuantity) && newQuantity >= 0) {
            sta = changeCountItem(productId, newQuantity);
        } else {
            // Khôi phục giá trị cũ nếu số lượng không hợp lệ
            $('#notificationMessage').text('Giá trị nhập không hợp lệ'); // Cập nhật nội dung thông báo
            $('#notificationModal').modal('show');   // Hiển thị modal
            inputElement.value = originalQuantity;
        }
        if (!sta) {
            inputElement.value = originalQuantity;
        }
    }

    function getItem(productId, type) {
        console.log(type)
        if (type === 1) {
            window.location.href = `/detail-product/instock/${productId}`;
        }
        else if (type === 2) {
            window.location.href = `/detail-group-by/${productId}`;
        }
    }

    // Load giỏ hàng khi trang được tải
    document.addEventListener("DOMContentLoaded", loadCart);
</script>